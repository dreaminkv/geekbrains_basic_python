# 3 Есть два списка:
tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена', 'sdgsdg', 'DGGGG'
]
klasses = [
    '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б'
]
#
#
# Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
# ('Иван', '9А')
# ('Анастасия', '7В')
# ...
#
# Количество генерируемых кортежей не должно быть больше длины списка tutors. Если в списке klasses меньше
# элементов, чем в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)
#
# Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. Подумать,
# в каких ситуациях генератор даст эффект.


def shool(list_1, list_2):
    _tutors = (el for el in list_1)
    _klasses = (el for el in list_2)
    for _shool in zip(_klasses, _tutors):
        yield _shool[::-1]
    for rest in _tutors:
        yield rest, None


print(*shool(tutors, klasses))
